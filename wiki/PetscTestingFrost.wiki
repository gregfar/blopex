#summary BLOPEX Complex Petsc testing on UCAR Frost (IBM)
<wiki:toc max_depth="2" />

= Introduction =

How to test BLOPEX under Beta version of Petsc on IBM Linux system Frost.

= Setup Petsc =  

To use blopex_solve_double or blopex_solve_complex using the 
Beta release of Petsc first download the development version from 
the Petsc website at ftp://info.mcs.anl.gov/pub/petsc-dev.tar.gz
 
To install files issue command:
{{{
>> gunzip -c petsc-dev.tar.gz | tar -xof -
}}}
This creates files in directory petsc-dev.  

A special config file is needed. Copy it to the petsc config directory as follows:
{{{
>> cd petsc-dev
>> cp /contrib/bgl/petsc/petsc-3.0.0-p4/bgl-ibm-goto_lapack.py config/
}}}

Now we need to install a patch for the Frost system to Petsc.
{{{
>> patch -p0 < /contrib/bgl/petsc/petsc-3.0.0-p4/petsc-3.0.0-p4.patch 
patching file ./src/sys/viewer/impls/socket/socket.h
}}}

Configure Petsc as follows:
{{{
>> ./config/bgl-ibm-goto_lapack.py --with-shared --with-scalar-type=complex --with-debugging=1
 
=================================================================================
             Configuring PETSc to compile on your system                         
=================================================================================
.....
PETSc:
  **
  ** Before running "make" your PETSC_ARCH must be specified with:
  **  ** setenv PETSC_ARCH bgl-ibm-goto-O3_440d (csh/tcsh)
  **  ** PETSC_ARCH=bgl-ibm-goto-O3_440d; export PETSC_ARCH (sh/bash)
  **
  **
  ** Before running "make" your PETSC_DIR must be specified with:
  **  ** setenv PETSC_DIR /home/dmccuan/petsc-3.0.0-p4 (csh/tcsh)
  **  ** PETSC_DIR=/home/dmccuan/petsc-3.0.0-p4; export PETSC_DIR (sh/b
....
}}}
Now two environment variables must be setup as specified in the configuration run. Note by default we are running under the csh shell.
{{{
>> setenv PETSC_ARCH bgl-ibm-goto-O3_440d  
> setenv PETSC_DIR /home/dmccuan/petsc-3.0.0-p4 
}}}

We will also need these set when compiling the blopex_petsc interface.   

Since we are not using the source for blopex included in Petsc we don't need the 
options --download-blopex=1 or --download-hypre=1.  

Petsc runs with either double or complex objects but not both.  
To test the blopex routines for double configure Petsc without the 
option --with-scalar-type=complex. 

After configuration is finished issue the command
{{{
>> make all test
}}}
= Setup blopex_petsc =  

Source for blopex_abstract and blopex_petsc must be present on your system.
Either obtained via tarballs or svn repository.

I have setup a tarball called blopex.tar.gz under the downloads tab that contains the new blopex and 
interfaces which has been modified for complex arithematic.  This creates 
source under directory work/trunk.

In order to compile the blopex_petsc drivers for testing we must first have 
blopex_abstract installed and compiled.  

To do this execute "make clean" and then "make" under work/trunk/blopex_abstract.

Then, some adjustments to the makefiles for blopex_petsc are needed. 

The ../blopex_petsc/Makefile.inc must specify the location of petsc_abstract
For example:
{{{
LOBPCG_ROOT_DIR = ../../blopex_abstract
}}}
when blopex_abstract and petsc_abstract directories are defined under the same directory. 

Note that ../blopex_petsc/driver/Makefile, ../blopex_petsc/driver_fiedler/Makefile, and 
../blopex_petsc/petsc-interface must have an include for the Petsc variable definitions.
   
For the Beta version use
{{{
include ${PETSC_DIR}/conf/variables
}}}
This change has already been implemented in the tarball. 

note:  ${CLINKER}, ${PETSC_COMPILE_SINGLE}, and ${PETSC_KSP_LIB} are set by this include. 

After running make, executables for driver and driver_fiedler are created in their 
respective directories.  

= Execution of Tests =

See wiki PetscTestingLinux for descriptions of test programs.

Frost executes mpi jobs under the cobalt batch system.
Jobs are submitted via command cqsub.  

For example to submit driver_fiedler change to the .../blopex_petsc/driver_fiedler subdirectory and issue command:
{{{
cqsub -n 32 -t 00:10:00 ./driver_fiedler ...etc...
}}}

A batch job number is returned (say 894111).  Output is returned to current directory.
Output consists of 894111.cobaltlog, 894111.error, and 894111.output

Job execution can be monitored via command cqstat; see http://www.cisl.ucar.edu/docs/frost/cbr.jsp for details.

= Test Results =

The tests were executed on UCAR Frost system in May 2009.  This is an Linux operating system and the IBM blrts_xlc compiler was used.   

== driver_fiedler  L-matrix-complex.petsc ==

cqsub -n 32 -t 00:10:00 ./driver_fiedler -matrix L-matrix-complex.petsc -n_eigs 3 -tol 1e-6 -itr 100

Eigenvalues computed
{{{
Eigenvalue lambda       Residual              
3.2405735916818225e-06  1.9104398003429047e-07
9.4602276110268679e-06  1.5720358098795360e-07
2.0138116290393120e-05  4.9455789576037760e-07

9 iterations
Solution process, seconds: 8.418286e+01
}}}

== driver_fiedler  DL-matrix-complex.petsc ==

cqsub -n 32 -t 00:10:00 ./driver_fiedler -matrix DL-matrix-complex.petsc -n_eigs 3 -tol 1e-6 -itr 100


Eigenvalues computed
{{{
Eigenvalue lambda       Residual              
4.0146562896021974e-05  4.0097605284112998e-06
4.0189568320721522e-05  3.4396113767381132e-06
4.0221973659885288e-05  3.7112788514828566e-06

100 iterations
Solution process, seconds: 3.246532e+00
}}}

== driver_fiedler  test_complex1.petsc ==

cqsub -n 32 -t 00:10:00 ./driver_fiedler -matrix test_complex1.petsc -n_eigs 3 -tol 1e-5 -itr 20

Eigenvalues computed
{{{
Eigenvalue lambda       Residual              
9.3173086234145286e-01  2.5725883485556160e-03
9.4332184726599988e-01  1.6830353120371466e-03
9.4657160713854049e-01  4.3499844941039976e-03

20 iterations
}}}

== driver_fiedler  test_complex2.petsc ==

cqsub -n 32 -t 00:10:00 ./driver_fiedler -matrix test_complex2.petsc -n_eigs 3 -tol 1e-5 -itr 20

Eigenvalues computed
{{{
Eigenvalue lambda       Residual              
5.8390022119870444e-01  6.7837246604296915e-03
5.9280909291700978e-01  4.3844625848419149e-03
5.9577297841498866e-01  8.6492165993893883e-03

20 iterations
}}}

== driver_fiedler  test_complex3.petsc ==

cqsub -n 32 -t 00:10:00 -q debug ./driver_fiedler -matrix test_complex3.petsc -n_eigs 3 -tol 1e-5 -itr 20

Eigenvalues computed
{{{
Eigenvalue lambda       Residual              
9.6192000894983607e+01  3.9241687572818332e-02
9.6234214127818561e+01  1.0539584453860490e-01
9.6288534468695900e+01  5.5469859617371227e-02

20 iterations
Solution process, seconds: 3.407860e-01
}}}